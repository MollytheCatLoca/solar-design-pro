"""add_solar_models

Revision ID: e9cbe1d0ec71
Revises: 45981f5698e5
Create Date: 2025-06-02 12:25:41.376541

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e9cbe1d0ec71'
down_revision: Union[str, None] = '45981f5698e5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inverter_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('power_ac_w', sa.Float(), nullable=False),
    sa.Column('power_dc_max_w', sa.Float(), nullable=False),
    sa.Column('vdc_max', sa.Float(), nullable=True),
    sa.Column('vdc_min', sa.Float(), nullable=True),
    sa.Column('vdc_nominal', sa.Float(), nullable=True),
    sa.Column('vac_nominal', sa.Float(), nullable=True),
    sa.Column('efficiency_max', sa.Float(), nullable=True),
    sa.Column('efficiency_euro', sa.Float(), nullable=True),
    sa.Column('efficiency_cec', sa.Float(), nullable=True),
    sa.Column('mppt_channels', sa.Integer(), nullable=True),
    sa.Column('phases', sa.Integer(), nullable=True),
    sa.Column('datasheet_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model')
    )
    op.create_index(op.f('ix_inverter_types_id'), 'inverter_types', ['id'], unique=False)
    op.create_table('panel_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('manufacturer', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('power_watts', sa.Float(), nullable=False),
    sa.Column('efficiency', sa.Float(), nullable=False),
    sa.Column('area_m2', sa.Float(), nullable=False),
    sa.Column('voc', sa.Float(), nullable=True),
    sa.Column('isc', sa.Float(), nullable=True),
    sa.Column('vmp', sa.Float(), nullable=True),
    sa.Column('imp', sa.Float(), nullable=True),
    sa.Column('temp_coeff_pmax', sa.Float(), nullable=True),
    sa.Column('temp_coeff_voc', sa.Float(), nullable=True),
    sa.Column('temp_coeff_isc', sa.Float(), nullable=True),
    sa.Column('noct', sa.Float(), nullable=True),
    sa.Column('cells_in_series', sa.Integer(), nullable=True),
    sa.Column('bifacial', sa.Boolean(), nullable=True),
    sa.Column('datasheet_url', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('model')
    )
    op.create_index(op.f('ix_panel_types_id'), 'panel_types', ['id'], unique=False)
    op.create_table('simulation_scenarios',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('system_losses', sa.Float(), nullable=True),
    sa.Column('annual_degradation', sa.Float(), nullable=True),
    sa.Column('soiling_losses', sa.Float(), nullable=True),
    sa.Column('discount_rate', sa.Float(), nullable=True),
    sa.Column('inflation_rate', sa.Float(), nullable=True),
    sa.Column('electricity_price_escalation', sa.Float(), nullable=True),
    sa.Column('module_cost', sa.Float(), nullable=True),
    sa.Column('inverter_cost', sa.Float(), nullable=True),
    sa.Column('bos_cost', sa.Float(), nullable=True),
    sa.Column('installation_cost', sa.Float(), nullable=True),
    sa.Column('om_cost_per_mw_year', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('weather_data',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('weather_data', sa.JSON(), nullable=False),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_weather_location', 'weather_data', ['latitude', 'longitude'], unique=True)
    op.create_index(op.f('ix_weather_data_id'), 'weather_data', ['id'], unique=False)
    op.create_table('solar_designs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('capacity_mw', sa.Float(), nullable=False),
    sa.Column('panel_type_id', sa.Integer(), nullable=True),
    sa.Column('inverter_type_id', sa.Integer(), nullable=True),
    sa.Column('tilt_angle', sa.Float(), nullable=True),
    sa.Column('azimuth_angle', sa.Float(), nullable=True),
    sa.Column('row_spacing', sa.Float(), nullable=True),
    sa.Column('module_orientation', sa.String(), nullable=True),
    sa.Column('modules_per_string', sa.Integer(), nullable=True),
    sa.Column('strings_per_inverter', sa.Integer(), nullable=True),
    sa.Column('total_inverters', sa.Integer(), nullable=True),
    sa.Column('installation_area', sa.JSON(), nullable=True),
    sa.Column('simulation_results', sa.JSON(), nullable=True),
    sa.Column('annual_production_mwh', sa.Float(), nullable=True),
    sa.Column('capacity_factor', sa.Float(), nullable=True),
    sa.Column('performance_ratio', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('simulated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['inverter_type_id'], ['inverter_types.id'], ),
    sa.ForeignKeyConstraint(['panel_type_id'], ['panel_types.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_designs_id'), 'solar_designs', ['id'], unique=False)
    op.create_table('financial_analyses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('design_id', sa.Integer(), nullable=False),
    sa.Column('scenario_id', sa.String(), nullable=False),
    sa.Column('total_investment', sa.Float(), nullable=True),
    sa.Column('module_cost', sa.Float(), nullable=True),
    sa.Column('inverter_cost', sa.Float(), nullable=True),
    sa.Column('bos_cost', sa.Float(), nullable=True),
    sa.Column('installation_cost', sa.Float(), nullable=True),
    sa.Column('debt_percentage', sa.Float(), nullable=True),
    sa.Column('interest_rate', sa.Float(), nullable=True),
    sa.Column('loan_term_years', sa.Integer(), nullable=True),
    sa.Column('lcoe', sa.Float(), nullable=True),
    sa.Column('npv', sa.Float(), nullable=True),
    sa.Column('irr', sa.Float(), nullable=True),
    sa.Column('payback_period', sa.Float(), nullable=True),
    sa.Column('roi', sa.Float(), nullable=True),
    sa.Column('cash_flows', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['design_id'], ['solar_designs.id'], ),
    sa.ForeignKeyConstraint(['scenario_id'], ['simulation_scenarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_financial_analyses_id'), 'financial_analyses', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_financial_analyses_id'), table_name='financial_analyses')
    op.drop_table('financial_analyses')
    op.drop_index(op.f('ix_solar_designs_id'), table_name='solar_designs')
    op.drop_table('solar_designs')
    op.drop_index(op.f('ix_weather_data_id'), table_name='weather_data')
    op.drop_index('idx_weather_location', table_name='weather_data')
    op.drop_table('weather_data')
    op.drop_table('simulation_scenarios')
    op.drop_index(op.f('ix_panel_types_id'), table_name='panel_types')
    op.drop_table('panel_types')
    op.drop_index(op.f('ix_inverter_types_id'), table_name='inverter_types')
    op.drop_table('inverter_types')
    # ### end Alembic commands ###
